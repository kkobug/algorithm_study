"""
※ SW Expert 아카데미의 문제를 무단 복제하는 것을 금지합니다.
NxN 칸에 숫자가 적힌 판이 주어지고, 각 칸에서는 오른쪽이나 아래로만 이동할 수 있다.
맨 왼쪽 위에서 오른쪽 아래까지 이동할 때, 지나는 칸에 써진 숫자의 합계가 최소가 되도록 움직였다면
이때의 합계가 얼마인지 출력하는 프로그램을 만드시오.

[입력]
첫 줄에 테스트케이스의 수 T가 주어진다. 1<=T<=50
다음 줄부터 테스트 케이스의 별로 첫 줄에 가로 세로 칸 수 N이 주어지고, 다음 줄부터 N개씩 N개의 줄에 걸쳐 10이하의 자연수가 주어진다. 3<=N<=13

[출력]
각 줄마다 "#T" (T는 테스트 케이스 번호)를 출력한 뒤, 답을 출력한다.

입력
3
3
1 2 3
2 3 4
3 4 5
4
2 4 1 3
1 1 7 1
9 1 7 10
5 7 2 4
5
6 7 1 10 2
10 2 7 5 9
9 3 2 9 6
1 6 8 2 9
8 3 8 2 1
출력
#1 15
#2 18
#3 33
"""
def dfs(cnt, i=0, j=0):
    global ans
    if ans < cnt:  # 가는길에 최소값을 넘으면 가지치기
        return
    if (i, j) == (N-1, N-1):  # 오른쪽 아래에 도착하면 값 저장
        ans = cnt
        return
    if 0 <= i+1 < N:
        dfs(cnt+box[i+1][j], i+1, j)  # 아래로 갈수있으면 가고
    if 0 <= j+1 < N:
        dfs(cnt+box[i][j+1], i, j+1)  # 오른쪽으로 갈수있으면 가고

for tc in range(1, 1+int(input())):
    N = int(input())
    box = [list(map(int, input().split())) for _ in range(N)]
    ans = 250
    dfs(box[0][0])
    print(f'#{tc} {ans}')